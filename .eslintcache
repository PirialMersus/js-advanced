[{"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\redux\\state.ts":"1","C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx":"2","C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"3","C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\redux\\currencyReducer.ts":"4","C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"5","C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\index.tsx":"6","C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\App.tsx":"7","C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\lessons\\lesson2\\lesson2.ts":"8"},{"size":286,"mtime":1609751766196,"results":"9","hashOfConfig":"10"},{"size":860,"mtime":1609756877852,"results":"11","hashOfConfig":"10"},{"size":3871,"mtime":1609757735301,"results":"12","hashOfConfig":"10"},{"size":1534,"mtime":1619961422019,"results":"13","hashOfConfig":"10"},{"size":4256,"mtime":1619967274975,"results":"14","hashOfConfig":"10"},{"size":319,"mtime":1609752860853,"results":"15","hashOfConfig":"10"},{"size":619,"mtime":1620391514568,"results":"16","hashOfConfig":"10"},{"size":4729,"mtime":1620398926208,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a4lxls",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"34"},"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\redux\\state.ts",[],"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\lessons\\lesson1\\lesson1.tsx",[],"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\redux\\currencyReducer.ts",[],"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",["35","36","37"],"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\index.tsx",[],"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\App.tsx",["38"],"C:\\Users\\YogaDharmaSamadhi\\Desktop\\JS Lessons\\src\\lessons\\lesson2\\lesson2.ts",["39","40","41","42"],"import {log} from \"util\";\r\n\r\nconsole.log('lesson 2');\r\n\r\n// Lexical environment\r\n// http://jsflow.org/docs/lex-env/\r\n\r\n//// Closure\r\n// https://learn.javascript.ru/closure\r\n// https://developer.mozilla.org/ru/docs/Web/JavaScript/Closures\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%B7%D0%B0%D0%BC%D1%8B%D0%BA%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B2-javascript-%D1%80%D0%B0%D0%B7-%D0%B8-%D0%BD%D0%B0%D0%B2%D1%81%D0%B5%D0%B3%D0%B4%D0%B0-c211805b6898\r\n// https://www.youtube.com/watch?v=pahO5XjnfLA\r\n\r\n//// Сurrying\r\n// https://learn.javascript.ru/currying-partials\r\n// https://medium.com/@stasonmars/%D0%BF%D0%BE%D0%BD%D0%B8%D0%BC%D0%B0%D0%B5%D0%BC-%D0%BA%D0%B0%D1%80%D1%80%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D0%B2-javascript-5ec4a1d88827\r\n\r\n// Pattern Module\r\n// https://habr.com/ru/company/ruvds/blog/419997/\r\n\r\n// Recursion\r\n// https://learn.javascript.ru/recursion\r\n// https://www.youtube.com/watch?v=Kuq6oIN3PH0\r\n\r\n\r\n// Task 01\r\n// Реализовать функцию sum которая суммирует 2 числа следующим образом sum(3)(6) === 9\r\n// const sum(a:number): number => {\r\n//     return (b: number) => {\r\n//         return a + b\r\n//     }\r\n// }\r\nfunction sum1(a: number) {\r\n    return function (b: number) {\r\n        return a + b\r\n    }\r\n}\r\n\r\n// console.log(sum1(3)(6))\r\n\r\n// Task 02\r\n// Реализовать функцию makeCounter которая работает следующим образом:\r\n// const counter = makeCounter();\r\n// counter(); // 1\r\n// counter(); // 2\r\n// const counter2 = makeCounter();\r\n// counter2(); // 1\r\n// counter(); // 3\r\n\r\n// function makeCounter() {\r\n//     let i = 1\r\n//     return function (){\r\n//         return i ++\r\n//     }\r\n//\r\n//\r\n// }\r\n// const counter = makeCounter();\r\n// console.log(counter())\r\n// console.log(counter())\r\n// const counter2 = makeCounter();\r\n// console.log(counter2())\r\n// console.log(counter())\r\n\r\n// Task 03\r\n// Переписать функцию из Task 02 так, что бы она принимала число в качестве аргумента и это число было стартовым значением счетчика\r\n// и возвращала следующий объект методов:\r\n// increase: +1\r\n// decrease: -1\r\n// reset: установить счетчик в 0;\r\n// set: установить счетчик в заданное значение;\r\n\r\n// function makeCounter(n: number) {\r\n//     return {\r\n//         increase(){\r\n//             return ++n\r\n//         },\r\n//         decrease(){\r\n//             return n--\r\n//         },\r\n//         reset(){\r\n//             return n = 0\r\n//         },\r\n//         set(b: number){\r\n//             return n = b\r\n//         },\r\n//\r\n//     }\r\n// }\r\n// const counter1 = makeCounter(0)\r\n// console.log(counter1.increase())\r\n// console.log(counter1.increase())\r\n// console.log(counter1.increase())\r\n// console.log(counter1.set(6))\r\n// console.log(counter1.decrease())\r\n// console.log(counter1.reset())\r\n// console.log(counter1().decrease)\r\n// console.log(counter1().log)\r\n\r\n\r\n// Task 04*\r\n// Реализовать функцию superSum которая принимает число в качестве аргумента, которое указывает на количество слагаемых\r\n// и что бы корректно работали следующие вызовы:\r\n// 1) superSum(0) //0\r\n// 2) superSum(3)(2)(5)(3) //10\r\n// 3) superSum(3)(2)(5,3) //10\r\n// 4) superSum(3)(2,5,3) //10\r\n// 5) superSum(3)(2,5)(3) //10\r\n// 6) superSum(3)(2,5)(3,9) //10\r\n\r\nfunction superSum(n: number){\r\n    if (n === 0 ) return 0\r\n    if (n === 1 ) return (num: number) => num\r\n    let _arguments: Array<number> = []\r\n\r\n    function helper(...args: Array<number>) {\r\n        _arguments = [... _arguments, ...args]\r\n        if(_arguments.length >= n) {\r\n            _arguments.length = n\r\n            return _arguments.reduce((acc, number)=> acc + number)\r\n        } else {\r\n            return helper\r\n        }\r\n    }\r\n    return helper\r\n}\r\n\r\nconsole.log(superSum(0))\r\n//@ts-ignore\r\nconsole.log(superSum(3)(2)(5)(3))\r\n//@ts-ignore\r\n\r\nconsole.log(superSum(3)(2)(5,3))\r\n\r\n\r\n// P.S. типизируйте только аргументы, а при вызове функции используйте @ts-ignore\r\n\r\n// Task 05\r\n// решить все задачи по рекурсии которые даны в конце статьи https://learn.javascript.ru/recursion\r\n\r\n// Task 06\r\n// написать функцию, которая повторяет функционал метода flat массива на всю глубину.\r\n\r\n// just a plug\r\nexport default () => {\r\n};",{"ruleId":"43","severity":1,"message":"44","line":11,"column":9,"nodeType":"45","messageId":"46","endLine":11,"endColumn":16},{"ruleId":"43","severity":1,"message":"47","line":11,"column":18,"nodeType":"45","messageId":"46","endLine":11,"endColumn":32},{"ruleId":"43","severity":1,"message":"48","line":82,"column":7,"nodeType":"45","messageId":"46","endLine":82,"endColumn":22},{"ruleId":"43","severity":1,"message":"49","line":3,"column":8,"nodeType":"45","messageId":"46","endLine":3,"endColumn":15},{"ruleId":"43","severity":1,"message":"50","line":1,"column":9,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"51","line":33,"column":10,"nodeType":"45","messageId":"46","endLine":33,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":117,"column":26,"nodeType":"54","messageId":"55","endLine":117,"endColumn":27,"fix":"56"},{"ruleId":"57","severity":1,"message":"58","line":145,"column":1,"nodeType":"59","endLine":146,"endColumn":3},"@typescript-eslint/no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","'ConnectedProps' is defined but never used.","'mapStateToProps' is assigned a value but never used.","'Lesson1' is defined but never used.","'log' is defined but never used.","'sum1' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"60","text":"61"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",[3416,3417],""]